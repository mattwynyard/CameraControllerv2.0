Index: src/main/java/TCPConnection/CameraApp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Copyright 2018 - Onsite Developments\r\n * @author Matt Wynyard November 2018\r\n * @version 1.1\r\n */\r\n\r\npackage TCPConnection;\r\n\r\n\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.File;\r\nimport java.io.InputStream;\r\nimport javax.imageio.ImageIO;\r\nimport Bluetooth.BluetoothManager;\r\n/**\r\n * Main application class for CameraApp\r\n * Intialiases bluetooth adapter with camera id and handles the image build.\r\n *\r\n */\r\npublic class CameraApp {\r\n\r\n    private static BluetoothManager mBluetooth;\r\n    private static TCPServer mServer;\r\n    private static int count = 0;\r\n    private static String path;\r\n\r\n    private static Runnable ShutdownHook = new Runnable() {\r\n        @Override\r\n        public void run () {\r\n            if (mBluetooth.mClient != null) {\r\n                mServer.sendDataDB(\"NOTRECORDING,\");\r\n                mServer.sendDataDB(\"NOTCONNECTED,\");\r\n                mServer.sendDataDB(\"ERROR,\");\r\n                mServer.closeAll();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Main program entry point - takes an arguement sent from access which is the camera id,\r\n     * to setup bluetooth adapter name\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Connecting to phone: \" + args[0]);\r\n        System.out.println(\"Connecting to map: \" + args[1]);\r\n        System.out.println(\"Inspector:\" + args[2] + '\\n');\r\n        System.out.println(\"Thumbnails saved to:\" + args[3] + '\\n');\r\n        //System.out.println(\"Connecting to port:\" + args[4] + '\\n');\r\n        path = args[3];\r\n        if (args[0].equals(\"True\")) {\r\n            mServer = new TCPServer(38200, true);\r\n            System.out.println(\"Initialising bluetooth connection...\\n\");\r\n            mBluetooth = new BluetoothManager(args[2], mServer);\r\n            mBluetooth.start();\r\n            if (args[1].equals(\"True\")) {\r\n                mServer.startMap();\r\n            }\r\n        } else {\r\n            System.out.println(\"Starting server...\\n\");\r\n            mServer = new TCPServer(38200, false);\r\n            mServer.startMap();\r\n        }\r\n        Runtime.getRuntime().addShutdownHook(new Thread(ShutdownHook));\r\n        while(true) {\r\n            try {\r\n                Thread.sleep(10);\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reads in byte array to input stream to build a buffered image, then writes jpeg image to disk\r\n     * @param bytes - byte array containing pixel data for the image\r\n     * @param name - the photo name\r\n     */\r\n    public static void setIcon(byte[] bytes, final String name) {\r\n        try {\r\n            long start = System.currentTimeMillis();\r\n            InputStream in = new ByteArrayInputStream(bytes);\r\n            BufferedImage bufferedImage = ImageIO.read(in);\r\n            File imageFile = new File(path + name + \".jpg\");\r\n            if (bufferedImage != null) {\r\n                ImageIO.write(bufferedImage, \"jpg\", imageFile);\r\n            } else {\r\n                System.out.println(\"error reading input stream\");\r\n                System.out.println(bytes.length);\r\n            }\r\n            in.close();\r\n            long end = System.currentTimeMillis();\r\n            System.out.println(\"jpeg save time: \" + (end - start));\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/TCPConnection/CameraApp.java b/src/main/java/TCPConnection/CameraApp.java
--- a/src/main/java/TCPConnection/CameraApp.java	(revision dfff03aa966a9d25439ebe6e938f801b2287f2fd)
+++ b/src/main/java/TCPConnection/CameraApp.java	(date 1662687476630)
@@ -62,10 +62,10 @@
             mServer = new TCPServer(38200, false);
             mServer.startMap();
         }
-        Runtime.getRuntime().addShutdownHook(new Thread(ShutdownHook));
+        //Runtime.getRuntime().addShutdownHook(new Thread(ShutdownHook));
         while(true) {
             try {
-                Thread.sleep(10);
+                Thread.sleep(100);
             } catch (InterruptedException e) {
                 e.printStackTrace();
             }
